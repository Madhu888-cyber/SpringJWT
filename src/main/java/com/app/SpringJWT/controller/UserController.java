package com.app.SpringJWT.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.SpringJWT.model.User;
import com.app.SpringJWT.model.UserRequest;
import com.app.SpringJWT.model.UserResponse;
import com.app.SpringJWT.service.IUserService;
import com.app.SpringJWT.util.JwtUtil;

@RestController
@RequestMapping("/user")
public class UserController {

	@Autowired private IUserService iUserService;
	@Autowired private JwtUtil jwtUtil; 
	@Autowired private  AuthenticationManager authenticationManager;
	
	//creating a user
	@PostMapping("/save")
	public ResponseEntity<String> saveUser(@RequestBody User user){
		Integer id = iUserService.saveUser(user);
		String msg = "User is created with user id "+id;
		return new ResponseEntity<String>(msg, HttpStatus.OK);
	}
	
	//validate user and generate token(login)
	@PostMapping("/login")
	public ResponseEntity<UserResponse> loginUser(@RequestBody UserRequest userRequest){
		System.out.println("username and password => "+userRequest.getUsername() + "-"+userRequest.getPassword());
		//validate username/password with database
		authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(userRequest.getUsername(), userRequest.getPassword()));
		String token = jwtUtil.generateToken(userRequest.getUsername());
		return ResponseEntity.ok(new UserResponse(token,"Generated by nareshit"));
	}
}
